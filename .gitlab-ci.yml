image: docker:19.03.10

variables:
  # When using dind service, we need to instruct docker to talk with
  # the daemon started inside of the service. The daemon is available
  # with a network connection instead of the default
  # /var/run/docker.sock socket.
  DOCKER_HOST: tcp://docker:2376
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services.
  # If you're using GitLab Runner 12.7 or earlier with the Kubernetes executor and Kubernetes 1.6 or earlier,
  # the variable must be set to tcp://localhost:2376 because of how the
  # Kubernetes executor connects services to the job container
  # DOCKER_HOST: tcp://localhost:2376
  #
  # Specify to Docker where to create the certificates, Docker will
  # create them automatically on boot, and will create
  # `/certs/client` that will be shared between the service and job
  # container, thanks to volume mount from config.toml
  DOCKER_TLS_CERTDIR: "/certs"
  # These are usually specified by the entrypoint, however the
  # Kubernetes executor doesn't run entrypoints
  # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4125
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"

stages:
  - build
  - test
  - deploy

services:
  - docker:19.03.10-dind

before_script:
  # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/27384
  - sleep 5 
  - docker info

 
build-job:
  stage: build
  script:
    - echo "This builds something"

test-job1:
  stage: test
  script:
    - export PYTHONPATH=.
    - export FLASK_APP=web
    - apk update -q
    - apk add python3 python3-dev py3-pip
    - pip3 install Flask google-cloud-datastore
    - python3 -m unittest

deploy:
  stage: deploy
  environment:
    name: production
  image: google/cloud-sdk:alpine
  script:
  - echo $SERVICE_ACCOUNT > /tmp/$CI_PIPELINE_ID.json
  - gcloud auth activate-service-account --key-file /tmp/$CI_PIPELINE_ID.json
  - gcloud --quiet --project $PROJECT_ID app deploy app.yaml
  - rm /tmp/$CI_PIPELINE_ID.json
  
  only:
    - master
